# Exercise: Create a virtual machine by using the Azure CLI

# Set some variables to avoid repetition

location='westeurope' # replace westeurope with a region close to you
resourceGroup='rg-az204-07'
vmName='az204vm'
adminUsername='azureuser'

# Create a resource group with the `az group create`` command. The command below creates a resource group named $vmName $location region.

az group create --name $resourceGroup --location $location

# Create a VM with the `az vm create`` command. The command below creates a Linux VM named $vmName with an admin user named azureuser.

ip_address=$(az vm create \
    --resource-group $resourceGroup \
    --name $vmName \
    --image UbuntuLTS \
    --generate-ssh-keys \
    --admin-username $adminUsername \
    --public-ip-sku Standard \
    --location $location \
    --assign-identity \
    --user-data 'bla bla' \
    --query publicIpAddress \
    --output tsv)

# By default, only SSH connections are opened when you create a Linux VM in Azure. Use az vm open-port to open TCP port 80 for use with the NGINX web server:

az vm open-port --port 80 \
--resource-group $resourceGroup \
--name $vmName

# Connect to your VM by using SSH, and install the NGINX web server.

token=$(ssh ${adminUsername}@${ip_address} -q -o StrictHostKeyChecking=false -o UserKnownHostsFile=/dev/null "curl -s -H Metadata:true 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https://vault.azure.net'" | sed -E s/'.*"access_token":"([^"]+)".*'/\\1/ )
# curl 'http://169.254.169.254/metadata/identity/oauth2/token/access_token?api-version=2018-02-01&resource=https://vault.azure.net' -H Metadata:true -s
token=$(curl -s -H Metadata:true 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https://vault.azure.net' | sed -E s/'.*"access_token":"([^"]+)".*'/\\1/ )
curl -s -H "Authorization: Bearer $token" https://az204vault-7018.vault.azure.net/secrets/ExamplePassword/bfebb549141d49edb2c5574d4f95de1c?api-version=7.3 | sed -E s/'.*"value":"([^"]+)".*'/\\1/

# Read tags as json
# curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance/compute/tagsList?api-version=2021-01-01&format=json"

# Read tags as text
# curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance/compute/tags?api-version=2021-01-01&format=text"

# Use a web browser of your choice to view the default NGINX welcome page. Use the public IP address of your VM as the web address. The following example shows the default NGINX web site:

read -p "Press enter to remove the resources ..."

# You can now safely delete the az204-vm-rg resource group from your account by running the command below.

az group delete --name $resourceGroup --no-wait --yes